// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorBoundary should catch errors set the state and render the default FallbackComponent 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgb(55, 58, 60)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    onContentSizeChange={[Function]}
    scrollEnabled={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "justifyContent": "space-between",
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#1A1A1D",
              "flex": 1,
              "marginHorizontal": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6F2232",
                "fontFamily": "latoLightitalic",
                "fontSize": 35,
                "fontStyle": "normal",
                "fontWeight": "100",
                "textAlign": "center",
              }
            }
          >
            Es ist ein Fehler aufgetreten:
          </Text>
          <Text
            style={
              Object {
                "color": "#4E4E50",
                "fontFamily": "Roboto",
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "600",
                "paddingVertical": 10,
              }
            }
          >
            Error: Objects are not valid as a React child (found: Error: This is a test error!). If you meant to render a collection of children, use an array instead.
    in View (created by View)
    in View
    in ErrorBoundary
          </Text>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 26,
                  "fontWeight": "600",
                  "textAlign": "center",
                }
              }
            >
              &gt;App Neustarten&lt;
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`ErrorBoundary should catch errors set the state render the FallbackComponent and call onError() 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgb(55, 58, 60)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    onContentSizeChange={[Function]}
    scrollEnabled={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "justifyContent": "space-between",
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#1A1A1D",
              "flex": 1,
              "marginHorizontal": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6F2232",
                "fontFamily": "latoLightitalic",
                "fontSize": 35,
                "fontStyle": "normal",
                "fontWeight": "100",
                "textAlign": "center",
              }
            }
          >
            Es ist ein Fehler aufgetreten:
          </Text>
          <Text
            style={
              Object {
                "color": "#4E4E50",
                "fontFamily": "Roboto",
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "600",
                "paddingVertical": 10,
              }
            }
          >
            Error: Objects are not valid as a React child (found: Error: This is a test error!). If you meant to render a collection of children, use an array instead.
    in View (created by View)
    in View
    in ErrorBoundary
          </Text>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 26,
                  "fontWeight": "600",
                  "textAlign": "center",
                }
              }
            >
              &gt;App Neustarten&lt;
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`ErrorBoundary should render children 1`] = `<workingComponent />`;
